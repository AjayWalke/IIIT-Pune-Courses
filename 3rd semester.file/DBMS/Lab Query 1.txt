->2.16 Add a new department called "Quality Assurance", with a budget of $40,000 and departmental code 11.
Add an employee called "Mary Moore" in that department, with SSN 847-21-9811.
insert into departments values(11, 'Quality Assurance', 40000);
insert into employees values(847219811, 'Mary', 'Moore', 11);


-->2.17 Reduce the budget of all departments by 10%.
update departments 
set budget = 0.9 * budget;

-->2.18 Reassign all employees from the Research department (code 77) to the IT department (code 14).
update employees
set department = 14
where department = 77;

-->2.19 Delete from the table all employees in the IT department (code 14).
delete from employees
where department = 14;

-->2.20 Delete from the table all employees who work in departments with a budget greater than or equal to $60,000.
delete from employees
where department in (select code from departmentswhere budget>=60000);

-->2.21 Delete from the table all employees.
delete from employees;

->>Database Creation 

CREATE TABLE Warehouses (
   Code NUMBER primary key,
   Location VARCHAR(255),
   Capacity NUMBER(10),
 );

 CREATE TABLE Boxes (
    Code NUMBER(4) primary key,
    Contents VARCHAR(255),
    Value NUMBER(10),
    Warehouse NUMBER(10) REFERENCES Warehouses(Code)
 );
 

 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(1,'Chicago',3);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(2,'Chicago',4);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(3,'New Delhi',7);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(4,'New York',2);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(5,'Pune',8);
 
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0001','Rocks',180,3);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0002','Rocks',250,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0003','Scissors',190,4);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0004','Rocks',200,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0005','Papers',75,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0006','Papers',50,3);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0007','Papers',175,2);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0008','Rocks',140,4);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0009','Scissors',125,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0010','Scissors',150,2);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0011','Papers',90,5);




-->3.1 Select all warehouses.
select * from warehouses;

-->3.2 Select all boxes with a value larger than $150.
select * from boxes where Value>150;

-->3.3 Select all distinct contents in all the boxes.
select distinct contents from boxes;

-->3.4 Select the average value of all the boxes.
select avg(value) from boxes;

-->3.5 Select the warehouse code and the average value of the boxes in each warehouse.
select warehouse, avg(value) from boxes group by warehouse;

-->3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.

select warehouse, avg(value) 
from boxes 
group by warehouse
having avg(value)> 150;


-->3.7 Select the code of each box, along with the name of the city the box is located in.
select boxes.code, warehouses.location
from boxes join warehouses
on boxes.Warehouse = Warehouses.Code;

-->3.8 Select the warehouse codes, along with the number of boxes in each warehouse. 
select Warehouse, count(*) 
from boxes 
group by warehouse;


-->3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).
select Code
from warehouses join (select warehouse temp_a, count(*) temp_b from boxes group by warehouse) temp
on (warehouses.code = temp.temp_a)
where warehouses.Capacity<temp.temp_b;

SELECT Code
   FROM Warehouses
   WHERE Capacity <
   (
     SELECT COUNT(*)
       FROM Boxes
       WHERE Warehouse = Warehouses.Code
   );

-->3.10 Select the codes of all the boxes located in Chicago.
select Boxes.code 
from boxes join Warehouses
on boxes.warehouse = warehouses.code
where warehouses.location = 'Chicago';

 /* With a subquery */
 SELECT Code
   FROM Boxes
   WHERE Warehouse IN
   (
     SELECT Code
       FROM Warehouses
       WHERE Location = 'Chicago'
   );
